{"ast":null,"code":"import axios from 'axios';\nexport default ((url = '', para = {}, method = 'GET') => {\n  let promise;\n  return new Promise((resolve, reject) => {\n    if (method.toUpperCase() === 'GET') {\n      let paraStr = '';\n      Object.keys(para).forEach(key => {\n        paraStr += key + '=' + para[key] + '&';\n      });\n\n      if (paraStr) {\n        paraStr = paraStr.substr(0, paraStr.lastIndexOf('&'));\n        url += '?' + paraStr;\n      }\n\n      promise = axios.get(url);\n    } else if (method.toUpperCase() === 'POST') {\n      promise = axios.post(url, para);\n    }\n\n    promise.then(response => {\n      resolve(response.data);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n});","map":{"version":3,"sources":["/Users/spscd002/Desktop/ReactProjects/react-elm-demo/src/api/client.js"],"names":["axios","url","para","method","promise","Promise","resolve","reject","toUpperCase","paraStr","Object","keys","forEach","key","substr","lastIndexOf","get","post","then","response","data","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,gBAAe,CAACC,GAAG,GAAC,EAAL,EAASC,IAAI,GAAC,EAAd,EAAkBC,MAAM,GAAC,KAAzB,KAAiC;AAC5C,MAAIC,OAAJ;AAEA,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAClC,QAAIJ,MAAM,CAACK,WAAP,OAAyB,KAA7B,EAAoC;AAChC,UAAIC,OAAO,GAAG,EAAd;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAYT,IAAZ,EAAkBU,OAAlB,CAA2BC,GAAD,IAAO;AAC7BJ,QAAAA,OAAO,IAAII,GAAG,GAAG,GAAN,GAAYX,IAAI,CAACW,GAAD,CAAhB,GAAwB,GAAnC;AACH,OAFD;;AAGA,UAAIJ,OAAJ,EAAa;AACTA,QAAAA,OAAO,GAAGA,OAAO,CAACK,MAAR,CAAe,CAAf,EAAkBL,OAAO,CAACM,WAAR,CAAoB,GAApB,CAAlB,CAAV;AACAd,QAAAA,GAAG,IAAI,MAAMQ,OAAb;AACH;;AACDL,MAAAA,OAAO,GAAGJ,KAAK,CAACgB,GAAN,CAAUf,GAAV,CAAV;AACH,KAVD,MAUO,IAAIE,MAAM,CAACK,WAAP,OAAyB,MAA7B,EAAqC;AACxCJ,MAAAA,OAAO,GAAGJ,KAAK,CAACiB,IAAN,CAAWhB,GAAX,EAAgBC,IAAhB,CAAV;AACH;;AAEDE,IAAAA,OAAO,CAACc,IAAR,CAAcC,QAAD,IAAY;AACrBb,MAAAA,OAAO,CAACa,QAAQ,CAACC,IAAV,CAAP;AACH,KAFD,EAEGC,KAFH,CAEUC,KAAK,IAAE;AACbf,MAAAA,MAAM,CAACe,KAAD,CAAN;AACH,KAJD;AAKH,GApBM,CAAP;AAqBH,CAxBD","sourcesContent":["import axios from 'axios'\n\nexport default (url='', para={}, method='GET')=>{\n    let promise;\n\n    return new Promise((resolve, reject)=>{\n        if (method.toUpperCase() === 'GET') {\n            let paraStr = '';\n            Object.keys(para).forEach((key)=>{\n                paraStr += key + '=' + para[key] + '&' \n            });\n            if (paraStr) {\n                paraStr = paraStr.substr(0, paraStr.lastIndexOf('&'));\n                url += '?' + paraStr;\n            }\n            promise = axios.get(url);\n        } else if (method.toUpperCase() === 'POST') {\n            promise = axios.post(url, para);\n        }\n\n        promise.then((response)=>{\n            resolve(response.data);\n        }).catch (error=>{\n            reject(error);\n        });\n    });\n};"]},"metadata":{},"sourceType":"module"}